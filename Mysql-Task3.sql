Use couriermanagement;
-- 14 Find the total number of couriers handled by each employee.
Select e.emp_id, e.emp_name, COUNT(c.courier_id) as total_couriers
From Employee e
Join Orders o On e.emp_id = o.courier_id
Join Courier c On o.courier_id = c.courier_id
Group by e.emp_id, e.emp_name
Order by total_couriers Desc;


-- 15 Calculate the total revenue generated by each location
Select l.location_id, l.name as location_name, SUM(p.amount) as total_revenue
From Location l
Join Orders o On l.location_id = o.location_id
Join Payment p On o.payment_id = p.payment_id
Group by l.location_id, l.name
Order by total_revenue Desc;

-- 16 Find the total number of couriers delivered to each location.
select l.location_id,l.name as location_name, COUNT(o.courier_id) as total_deliveries From Location l
join Orders o on l.location_id = o.location_id
where o.order_status = 'Delivered'
group by l.location_id, l.name
order by total_deliveries desc;

-- 17 Find the courier with the highest average delivery time:
Select c.courier_id, c.person_name, avg(Timestampdiff(Hour, o.created_at, NOW())) as avg_delivery_time From Courier c
Join Orders o On c.courier_id = o.courier_id
Where o.order_status = 'Delivered'
Group by c.courier_id, c.person_name
Order by avg_delivery_time Desc
limit 1;

-- 18 Find Locations with Total Payments Less Than a Certain Amount
Select l.location_id, l.name as location_name, SUM(p.amount) as total_payment From Location l
Join Orders o On l.location_id = o.location_id
Join Payment p On o.payment_id = p.payment_id
Group by l.location_id, l.name
Having total_payment<1000
Order by total_payment Asc;

-- 19 Calculate Total Payments per Location
Select l.name as location_name, SUM(p.amount) as total_payment
From Location l
Join Orders o On l.location_id = o.location_id
Join Payment p On o.payment_id = p.payment_id
Group by  l.name
Order by total_payment Asc;

-- 20 Retrieve couriers who have received payments totaling more than $1000 in a specific location (LocationID = X):
SELECT c.courier_id, c.person_name, SUM(p.amount) AS total_payments
FROM Courier c
JOIN Orders o ON c.courier_id = o.courier_id
JOIN Payment p ON o.payment_id = p.payment_id
WHERE o.location_id = 2
GROUP BY c.courier_id, c.person_name
HAVING total_payments > 1000
ORDER BY total_payments DESC;

-- 21 Retrieve couriers who have received payments totaling more than $1000 after a certain date (PaymentDate > 'YYYY-MM-DD'):
Select c.courier_id, c.person_name, Sum(p.amount) as total_payments
From Courier c
Join Orders o On c.courier_id = o.courier_id
Join Payment p On o.payment_id = p.payment_id
Where p.created_at > '2025-03-19'
Group by c.courier_id, c.person_name
Having total_payments > 1000
Order by total_payments Desc;

-- 22 Retrieve locations where the total amount received is more than $5000 before a certain date (PaymentDate > 'YYYY-MM-DD')
Select l.location_id, l.name as location_name, Sum(p.amount) as total_payments From Location l
Join Orders o On l.location_id = o.location_id
Join Payment p On o.payment_id = p.payment_id
Where p.created_at < '2025-03-19'
Group by l.location_id, l.name
Having total_payments > 2000
Order by total_payments Desc;


